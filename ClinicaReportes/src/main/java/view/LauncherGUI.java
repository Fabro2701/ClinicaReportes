package view;

import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.json.JSONException;

import exceptions.FileException;
import exceptions.IllegalDBModificationException;
import model.Constants;
import model.DoctorManager;
import model.person.Doctor;

public class LauncherGUI extends javax.swing.JFrame {
	DoctorManager doctorManager;
	Vector<Vector<Object>> doctorsData;
	DefaultTableModel doctorsTableModel;
    /**
     * Creates new form LauncherGUI
     */
    public LauncherGUI(){
    	
    	try {
    		doctorManager = new DoctorManager();
			doctorManager.loadFromFile(Constants.DOCTORS_IN_FILE);
			doctorsData = new Vector<Vector<Object>>();
	    	Vector<Object> header = new Vector<Object>();
	    	header.add("CMP");header.add("Nombre y Apellidos");
	    	doctorsTableModel = new DefaultTableModel(doctorsData,header);
	    	
	        initComponents();
	        
	    	this.jTableDoctors.getColumn("CMP").setMinWidth(110);
	    	this.jTableDoctors.getColumn("CMP").setPreferredWidth(110);
	    	this.jTableDoctors.getColumn("CMP").setMaxWidth(110);
	    	this.updateDoctorsTable();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e);
			e.printStackTrace();
		}
    	
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(){

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jpDoctorManager = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDoctors = new javax.swing.JTable();
        jtfFullName = new javax.swing.JTextField();
        jtfCMP = new javax.swing.JTextField();
        jbAddDoctor = new javax.swing.JButton();
        jbRemoveDoctor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 786, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 509, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Genración de reportes", jPanel1);

        jTableDoctors.setModel(doctorsTableModel);
        jScrollPane1.setViewportView(jTableDoctors);

        jtfFullName.setText("Nombre y apellidos");

        jtfCMP.setText("CMP");

        jbAddDoctor.setText("Agregar");
        jbAddDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddDoctorActionPerformed(evt);
            }
        });

        jbRemoveDoctor.setText("Eliminar");
        jbRemoveDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt){
                jbRemoveDoctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDoctorManagerLayout = new javax.swing.GroupLayout(jpDoctorManager);
        jpDoctorManager.setLayout(jpDoctorManagerLayout);
        jpDoctorManagerLayout.setHorizontalGroup(
            jpDoctorManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDoctorManagerLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpDoctorManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfCMP, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpDoctorManagerLayout.createSequentialGroup()
                        .addComponent(jbAddDoctor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoveDoctor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jpDoctorManagerLayout.setVerticalGroup(
            jpDoctorManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDoctorManagerLayout.createSequentialGroup()
                .addGroup(jpDoctorManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDoctorManagerLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDoctorManagerLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jpDoctorManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAddDoctor)
                            .addComponent(jbRemoveDoctor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfCMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Médicos", jpDoctorManager);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jbAddDoctorActionPerformed(java.awt.event.ActionEvent evt) {      
    	Doctor doctor = new Doctor(this.jtfFullName.getText(), this.jtfCMP.getText());
    	try {
			doctorManager.addDoctor(doctor);
	    	updateDoctorsTable();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e);
			e.printStackTrace();
		}
    }                                           

    private void jbRemoveDoctorActionPerformed(java.awt.event.ActionEvent evt){                                               
       	Doctor doctor = new Doctor(this.jtfFullName.getText(), this.jtfCMP.getText());
       	try {
			doctorManager.removeDoctor(doctor);
			updateDoctorsTable();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e);
			e.printStackTrace();
		}
       	
    }    
    
    private void updateDoctorsTable() throws FileException {
    	doctorsData.clear();
    	for(Doctor doctor:this.doctorManager) {
    		Vector<Object> v = new Vector<Object>();
    		v.add(doctor.getCMP());
    		v.add(doctor.getFullname());
    		this.doctorsTableModel.addRow(v);
    	}
    	this.jTableDoctors.repaint();
    	doctorManager.saveToFile(Constants.DOCTORS_OUT_FILE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LauncherGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableDoctors;
    private javax.swing.JButton jbAddDoctor;
    private javax.swing.JButton jbRemoveDoctor;
    private javax.swing.JPanel jpDoctorManager;
    private javax.swing.JTextField jtfCMP;
    private javax.swing.JTextField jtfFullName;
    // End of variables declaration                   
}

